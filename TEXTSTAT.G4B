!BAT
#-#+ TEXTSTAT.G4B v0.6 (20221017), by deomsh
#-#+ Function: count zeros before last EOL, count lines (with EOL & Text-type), labels, remark(ed)-lines and returns line-number(s) with spaces at end-of-line, count chars of longest line, count phrases with switch ["]/COUNT[C]:phrase["] (COUNTC is case-sensitive)
#-#+ Use: TEXTSTAT.G4B [switch] FILE
#-#+ Remark: if FILE contains spaces use "FILE", same for "switch"
::----------------------------------------------------------------------------------------------------------------------------
:: MAIN ROUTINE
::----------------------------------------------------------------------------------------------------------------------------
if "%~1"=="" && goto :help
if "%~1"=="/?" && goto :help
#ORG#if "%~1"=="" && endlocal && echo && echo Use: TEXTSTAT.G4B FILE  or TEXTSTAT.G4B "FILE" && echo && goto :eof
setlocal && set *
debug msg=0
set "ARG=%~1" &; if /i "%ARG:~0,7%"=="/COUNT:" && set "COUNT=%ARG:~7%" && set i=i && shift ! if /i "%ARG:~0,8%"=="/COUNTC:" && set "COUNT=%ARG:~8%" && shift
if exist ARG && if "%~1"=="" && endlocal && echo Argument FILE is missing && debug msg=3 && goto :eof ! set ARG=
set device=%~d1 &; if %device%==(md) && endlocal && echo FILE is an md-device, use full DEVICE/PATH && debug msg=3 && goto :eof
set "path=%~p1"
set "file=%~nx1"
set "pathfile=%path%%%file%" &; call Fn.11 "%pathfile%" " " && set pathfile=/"%pathfile:~1%"
set "filename=%device%%%pathfile%"
if not exist %filename% && endlocal && echo '%~nx1' does not exist (or is a Directory - not on NTFS)! && echo && debug msg=3 && goto :eof
cat --length=0 %filename% > nul ;; set /a filelen=%@retval%
call Fn.11 %filename% " " && if not exist COUNT && echo && echo %device%/%pathfile:~2,-1% && echo Size               %filelen% bytes && if not %filelen%<=261632 && endlocal && echo %filename%>255,5KB - not supported! && debug msg=3 && goto :eof
#GOOD#call Fn.11 %filename% " " && echo && echo %device%/%pathfile:~2,-1% && echo Size:              %filelen% bytes && if not %filelen%<=261632 && endlocal && echo %filename%>255,5KB - not supported! && debug msg=3 && goto :eof
#ORG#call Fn.11 %filename% " " && echo && echo %device%/%path:~2,-2%/%file:~1,-1% && echo Size: %filelen% bytes && if not %filelen%<=261632 && endlocal && echo %filename%>255,5KB - not supported! && debug msg=3 && goto :eof
call Fn.11 %filename% " " || if not exist COUNT && echo && echo %filename% && echo Size               %filelen% bytes && if not %filelen%<=261632 && endlocal && echo %filename%>255,5KB - not supported! && debug msg=3 && goto :eof
#GOOD#call Fn.11 %filename% " " || echo && echo %filename% && echo Size:              %filelen% bytes && if not %filelen%<=261632 && endlocal && echo %filename%>255,5KB - not supported! && debug msg=3 && goto :eof
if %filelen%==0 && endlocal && echo %~nx2 is a Zero-byte File (or possibly a Directory on NTFS)! && echo && debug msg=3 && goto :eof
set mdbase=0x3000 && set readsect=511 &; set FILE=(md)%mdbase%+%readsect% &; echo -n > %FILE%
raw dd if=%filename% of=%FILE% bs=1 count=%filelen% > nul
call :CntZeros dummy %FILE% "dos" %filelen% &; if exist result && set zeros=%result% && set result=
if %zeros%>=1 && echo Binary File, contains %zeros% zeros before last End Of Line marker && echo && endlocal && debug msg=3 && goto :eof
if exist COUNT && goto :count
call :CntLine %FILE% "dos" %filelen% &; if exist result && set dos=%result% && set result=
call :CntLine %FILE% "unix" %filelen% &; if exist result && set unix=%result% && set result=
call :CntLine %FILE% "mac" %filelen% &; if exist result && set mac=%result% && set result=
if %dos%>=1 && if %unix%==%dos% && if %unix%==%mac% && echo Number of Lines    %dos% && echo EndOfLine marker   CR+LF (0D0A) &; if %zeros%==0 && echo Text File Type     MS-DOS && set texttype=dos
#ORG#if %dos%>=1 && if %unix%==%mac% && echo Number of Lines:   %dos% && echo EndOfLine marker:  CR+LF (0D0A) &; if %zeros%==0 && echo Text File Type:    MS-DOS && set texttype=dos
if %dos%>=1 && if not %unix%==%mac% && if %dos%==%mac% && echo Number of Lines    %dos% EOL CR+LF (0D0A) && echo Number of Lines    %unix% EOL LF (0A) && echo Text File Type     Mixed EndOfLine markers
if %dos%>=1 && if not %unix%==%mac% && if not %dos%==%mac% &; if not %dos%<=%mac% && set mac=0 ! set /a mac=%mac%-%dos% &; echo Number of Lines    %dos% EOL CR+LF (0D0A) && echo Number of Lines    %unix% EOL LF (0A) && echo Number of Lines    %mac% EOL CR (0D) && echo Text File Type     Mixed EndOfLine markers
#ORG#if %dos%>=1 && if not %unix%==%mac% && echo Number of Lines:   %dos% EOL CR+LF (0D0A) && echo Number of Lines:   %unix% EOL LF (0D) && echo Number of Lines :   %mac% EOL CR (0D) && echo Text File Type:    Mixed EndOfLine markers
if %dos%==0 && if %unix%>=1 && if %mac%==0 && echo Number of Lines    %unix% && echo EndOfLine marker   LF (0A) && echo Text File Type     Unix && set texttype=unix
if %dos%==0 && if %unix%==0 && if %mac%>=1 && echo Number of Lines    %mac% && echo EndOfLine marker   CR (0D) && echo Text File Type     Mac && set texttype=mac
if %dos%==0 && if %unix%>=1 && if %mac%>=1 && echo Number of Lines    %unix% EOL LF (0A) && echo Number of Lines    %mac% EOL CR (0D) && echo Text File Type     Mixed EndOfLine markers
call :CntLabel %FILE% "unix" %filelen% &; if exist result && set doslabel=%result% && set result=
call :CntLabel %FILE% "mac" %filelen% &; if exist result && set maclabel=%result% && set result=
if exist doslabel && if not exist maclabel && echo Number of Labels   %doslabel%
if not exist doslabel && if exist maclabel && echo Number of Labels   %maclabel%
if exist doslabel && if exist maclabel && set /a labels=%doslabel%+%maclabel% &; echo -e Number of Labels\t    %labels%
call :CntRemarkLine %FILE% "#" %filelen% &; if exist result && echo Remark "#" count   %result% at begin of line && set result=
call :CntRemark %FILE% "#" %filelen% &; if exist result && echo Remark " #" count  %result% not at begin of line && set result=
call :CntRemarkLine %FILE% "::" %filelen% &; if exist result && echo Remark "::" count  %result% at begin of line && set result=
call :CntRemark %FILE% "::" %filelen% &; if exist result && echo Remark " ::" count %result% not at begin of line && set result=
call :CntRemarkLine %FILE% ";" %filelen% &; if exist result && echo Remark "; " count  %result% at begin of line && set result=
call :CntRemark %FILE% ";" %filelen% &; if exist result && echo Remark " ; " count %result% not at begin of line && set result=
call :CntRemarkLine %FILE% "rem" %filelen% &; if exist result && echo Remark REM count   %result% at begin of line && set result=
call :CntRemark %FILE% "rem" %filelen% &; if exist result && echo Remark REM count   %result% not at begin of line && set result=
call :CntSpaceEOL %FILE% "dos" %filelen% &; if exist result && echo -e Space before EOL   Line(s) %result% && set result=
call :CntSpaceEOL %FILE% "unix" %filelen% &; if exist result && echo -e Space before EOL   Line(s) %result% && set result=
if exist texttype && call :MaxLen %FILE% "%texttype%" &; if exist result && echo -e Longest Line       %result% chars && set result=
echo
endlocal && set result=%result%
debug msg=3
goto :eof
::----------------------------------------------------------------------------------------------------------------------------
:: SUB-ROUTINES
::----------------------------------------------------------------------------------------------------------------------------
:CntLabel
#-#+ Function: count number of labels; Argument: FILE; Optional: dos or mac
setlocal && set *
set FILE=%~1
if not /i "%~2"=="mac" && set EOL=\x0A
if /i "%~2"=="mac" && set EOL=\x0D
cat --locate=%EOL%\x3A --length=%~3 %FILE% > nul &; set /a count1=%@retval%
cat --locate=%EOL%\x3A\x3A --length=%~3 %FILE% > nul &; set /a count2=%@retval%
set result=%count1% && if exist count2 && set /a result=%count1%-%count2%
if %result%==0 && set result=
endlocal && set result=%result%
goto :eof

:CntLine
#-#+ Count lines in textfile; Argument: FILE; Optional: dos|unix|mac; Default: dos
setlocal && set *
set FILE=%~1
if /i "%~2"=="dos" && set EOL=\x0D\x0A &; cat --locate=%EOL% --length=%~3 %FILE% > nul &; set /a result=%@retval% > nul
if /i "%~2"=="unix" && set EOL=\x0A &; cat --locate=%EOL% --length=%~3 %FILE% > nul &; set /a result=%@retval% > nul
if /i "%~2"=="mac" && set EOL=\x0D &; cat --locate=%EOL% --length=%~3 %FILE% > nul &; set /a result=%@retval% > nul
if not exist result && set /a result=0
endlocal && set result=%result%
#debug msg=3
goto :eof

:CntSpaceEOL
#-#+ CntSpaceEOL <FILE> <dos|unix|mac>
#-# Count number of lines in textfile with space directly before EOL
#-# Mandatory Arguments: FILE dos|unix|mac
#-# Remarks: dos|unix|mac = specific EOL like 0D0A=dos, 0A=unix, 0D=(old)mac
#-# remarks not at the beginning of a line counted with preceding space only
setlocal && set *
set FILE=%~1
if /i %~2==dos && set EOL=\x0D\x0A && set EOLlen=2
if /i %~2==unix && set EOL=\x0A && set EOLlen=1
if /i %~2==mac && set EOL=\x0D && set EOLlen=1
cat --locate=\x20%EOL% --length=%~3 %FILE% > nul &; set /a result=%@retval%
if not %result%>=1 && goto :EndCntSpaceEOL
set skipEOL=0 && set c=%result% && set result=
:LoopCntSpaceEOL
cat --skip=%skipEOL% --locate=\x20%EOL% --number=1 --length=%~3 %FILE% > nul &; set /a linelen=%?%+2+%EOLlen%
if exist linelen && cat --locate=%EOL% --length=%linelen% %FILE% > nul &; set /a linenum=%@retval%
set /a c=%c%-1
set result=%result%%%linenum%,
#echo c=%c% result=%result% skipEOL=%skipEOL% linelen=%linelen% linenum=%linenum%
if %c%>=1 && if exist linelen && set /a skipEOL=%linelen%+1 && set linenum= && set linelen= && goto :LoopCntSpaceEOL
#cat --locate="\x0D%~3" %FILE% > nul &; set /a result=%result%+%@retval%
#cat --locate="\x20%~3" %FILE% > nul &; set /a result=%result%+%@retval%
if %result:~-1,1%==, && set result=%result:~0,-1%
:EndCntSpaceEOL
endlocal && set result=%result%
goto :eof

:CntRemarkLine
#-#+ CntRemarkLine <FILE> <"remark">
#-# Count remarks in textfile
#-# Mandatory Arguments: FILE "remark"
#-# Remarks: "remark" = specific remark-char(s): if not at beginning of line '#' and '::' with preceding space only, and ';' and 'rem' with preceding AND trailing space only
setlocal && set *
set FILE=%~1
cat --locate="\x0A%~2" --length=%~3 %FILE% > nul ;; set /a result=%@retval%
cat --locate="\x0D%~2" --length=%~3 %FILE% > nul ;; set /a result=%result%+%@retval%
if %result%==0 && set result=
endlocal && set result=%result%
goto :eof

:CntRemark
#-#+ CntRemarkLine <FILE> <"remark">
#-# Count remarks in textfile
#-# Mandatory Arguments: FILE "remark"
#-# Remarks: "remark" = specific remark-char(s): if not at beginning of line '#' and '::' with preceding space only, and ';' and 'rem' with preceding AND trailing space only
setlocal && set *
set FILE=%~1
if not "%~2"=="#" if not "%~2"=="::" |; cat --locate="\x20%~2" --length=%~3 %FILE% > nul &; set /a result=%@retval%
if not exist result && set result=0
if not "%~2"==";" if not /i "%~2"=="rem" |; cat --locatei="\x20%~2\x20" --length=%~3 %FILE% > nul &; set /a result=%@retval%
if %result%==0 && set result=
endlocal && set result=%result%
goto :eof

:CntZeros
#-#+ CntZeros <FILE> <"remark">
#-# Remarks: "remark" = specific remark-char(s)
#-# remarks not at the beginning of a line counted with preceding space only
setlocal && set *
set FILE=%~1
cat --locate=\x0A --length=%~3 %FILE% > nul &; set /a unix=%?%+1
cat --locate=\x0D --length=%~3 %FILE% > nul &; set /a mac=%?%+1
if not exist mac &; if %unix%<=%~3 && set lastEOL=%unix% ! set lastEOL=%~3
if exist mac && if exist unix &; if %unix%>=%mac% && if %unix%<=%~3 && set lastEOL=%unix% ! if not %unix%>=%mac% && if %mac%<=%~3 && set lastEOL=%mac% ! set lastEOL=%~3
if not exist unix &; if %mac%<=%~3 && set lastEOL=%mac% ! set lastEOL=%~4
cat --locate=\x00 --length=%lastEOL% %FILE% > nul ;; set /a result=%@retval%
endlocal && set result=%result%
goto :eof

:MaxLen
setlocal && set *
set FILE=%~1
if /i %~2==dos && set EOL=\x0D\x0A ! if /i %~2==unix && set EOL=\x0A ! if /i %~2==mac && set EOL=\x0D ! endlocal && set result= && goto :eof
cat --locate=%EOL% %FILE% > nul || endlocal && set result= && goto :eof
if %EOL%==\x0D\x0A && set add=2 ! set add=1
set skip=0
set maxlen=0
:maxlenloop
cat --skip=%skip% --locate=%EOL% --number=1 %FILE% > nul &; set length=%?% > nul &; if exist length && set /a length=%length%-%skip% > nul
if exist length && if not %length%<=%maxlen% && set maxlen=%length%
if exist length && set /a skip=%skip%+%length%+%add% > nul && set length= && goto :maxlenloop
if exist maxlen && set result=%maxlen% ! set result=
endlocal && set result=%result%
goto :eof

:count
setlocal && set * && set FILE=%FILE% && set SIZE=%filelen% && set "COUNT=%COUNT%" && set i=%i%
if not /i "%COUNT%"=="\x0D\x0A" if not /i "%COUNT%"=="\x0A" if not /i "%COUNT%"=="\x0D" || endlocal && set result= && echo End Of Line markers are not counted with '/COUNT(C):' use TEXTSTAT.G4B FILE && debug msg=3 && goto :eof
set x=19
#NOTNEEDEDANYMORE#set "COUNT=%COUNT%" &; set /a COUNTlen=%@retval% &; if %COUNTlen%<=16 && set x=19 ! set x=27
cat --locate%i%="%COUNT%" --length=%SIZE% %FILE% > nul &; set /a result=%@retval%
if not exist result && set result=0
call Fn.4 ;; set /a y=%@retval%>>8
#echo y=%y% x=%x%
if not /i "%COUNT:~0,4%"=="\x0A" && if not /i "%COUNT:~0,4%"=="\x0D" && if not /i "%COUNT:~0,8%"=="\x0D\x0A" && if not /i "%COUNT:~-4,4%"=="\x0A" && if not /i "%COUNT:~-4,4%"=="\x0D" && if not /i "%COUNT:~-8,8%"=="\x0D\x0A" &; call Fn.5 0 %y% |; echo -e -n $[0x0F] %COUNT%$[] && call Fn.5 %x% %y% |; echo %result% found
#call Fn.4 ;; set /a y=%@retval%>>8
if not /i "%COUNT:~0,8%"=="\x0D\x0A" &; if not /i "%COUNT:~0,4%"=="\x0A" if not /i "%COUNT:~0,4%"=="\x0D" |; call Fn.5 0 %y% |; echo -n -e $[0x0F] %COUNT:~4% && call Fn.5 %x% %y% |; echo %result% found at beginning of line
#OKE#if not /i "%COUNT:~0,8%"=="\x0D\x0A" &; if not /i "%COUNT:~0,4%"=="\x0A" if not /i "%COUNT:~0,4%"=="\x0D" |; call Fn.5 0 %y% |; echo -n $[0x0F] %COUNT%$[] && call Fn.5 %x% %y% |; echo %result% found at beginning of line
#call Fn.4 ;; set /a y=%@retval%>>8
if not /i "%COUNT:~0,8%"=="\x0D\x0A" |; call Fn.5 0 %y% |; echo -n -e $[0x0F] %COUNT:~8%$[] && call Fn.5 %x% %y% |; echo %result% found at beginning of line
#OKE#if not /i "%COUNT:~0,8%"=="\x0D\x0A" |; call Fn.5 0 %y% |; echo -n $[0x0F] %COUNT%$[] && call Fn.5 %x% %y% |; echo %result% found at beginning of line
if not /i "%COUNT:~-8,8%"=="\x0D\x0A" &; if not /i "%COUNT:~-4,4%"=="\x0A" if not /i "%COUNT:~-4,4%"=="\x0D" |; call Fn.5 0 %y% |; echo -n -e $[0x0F] %COUNT:~0,-4%$[] && call Fn.5 %x% %y% |; echo %result% found at end of line
#OKE#if not /i "%COUNT:~-8,8%"=="\x0D\x0A" &; if not /i "%COUNT:~-4,4%"=="\x0A" if not /i "%COUNT:~-4,4%"=="\x0D" |; call Fn.5 0 %y% |; echo -n $[0x0F] %COUNT%$[] && call Fn.5 %x% %y% |; echo %result% found at end of line
#call Fn.4 ;; set /a y=%@retval%>>8
if not /i "%COUNT:~-8,8%"=="\x0D\x0A" |; call Fn.5 0 %y% |; echo -n -e $[0x0F] %COUNT:~0,-8%$[] && call Fn.5 %x% %y% |; echo %result% found at end of line
#ORG#if not /i "%COUNT:~-8,8%"=="\x0D\x0A" |; call Fn.5 0 %y% |; echo -n $[0x0F] %COUNT%$[] && call Fn.5 %x% %y% |; echo %result% found at end of line
if %result%==0 && set result=
endlocal && set result=%result%
debug msg=3
goto :eof

:help
echo -e Help\t  TEXTSTAT.G4B v0.6 (20221017), by deomsh
echo -e Use 1\t  TEXTSTAT.G4B [switch] FILE
echo -e Use 2\t  TEXTSTAT.G4B [switch] "FILE"
echo -e Use 3\t  TEXTSTAT.G4B [/?]
echo -e Switches  /COUNT:phrase or "/COUNT:phrase" to find count of 'phrase'\n\t  /COUNTC:phrase or "/COUNTC:phrase" same, but case-sensitive
echo -e Remarks\t  FILE must be a textfile, max 261632 bytes (255,5KB)\n\t  Switches are not case-sensitive\n\t  'phrase' max 16 chars; if containing spaces, use double-quotes
echo $[]          For double-qoute char in 'phrase' use \x22
echo $[]          End Of Line markers at begin/ end of 'phrase': \x0A, \x0D\x0A or \x0D
echo $[]          For % in 'phrase' use \x25 (if needed)
echo -e Example   TEXTSTAT.G4B TEXTSTAT.G4B
echo -e Example   /TEXTSTAT.G4B /TEXTSTAT.G4B
echo -e Example   (hd0,0)/TEXTSTAT.G4B (hd0,0)/TEXTSTAT.G4B
echo -e Example   TEXTSTAT.G4B /COUNT:if TEXTSTAT.G4B
echo -e Example   TEXTSTAT.G4B "/COUNT:if not" TEXTSTAT.G4B
echo Example   TEXTSTAT.G4B "/COUNT:if \x22" TEXTSTAT.G4B
echo Example   TEXTSTAT.G4B /COUNT:\x0Aif TEXTSTAT.G4B
echo -e Example   TEXTSTAT.G4B /COUNT:example TEXTSTAT.G4B
echo -e Example   TEXTSTAT.G4B /COUNTC:example TEXTSTAT.G4B
echo Example   TEXTSTAT.G4B /COUNT:\x25@retval\x25 TEXTSTAT.G4B
